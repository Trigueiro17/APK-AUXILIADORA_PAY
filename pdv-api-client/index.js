/**
 * Exemplo de uso do cliente da API PDV Rafa
 * 
 * Este arquivo demonstra como usar todos os servi√ßos implementados
 * para realizar opera√ß√µes completas no sistema PDV.
 */

// Importar todos os servi√ßos
const { createUser, getUsers } = require('./src/services/usersService');
const { getProducts, createProduct } = require('./src/services/productsService');
const { openCashRegister, closeCashRegister, getCashRegisters } = require('./src/services/cashRegistersService');
const { createSale, completeSale, getSales } = require('./src/services/salesService');

/**
 * Fun√ß√£o principal que demonstra o fluxo completo do sistema
 */
async function exemploCompleto() {
  console.log('üöÄ Iniciando exemplo completo do sistema PDV\n');

  try {
    // 1. CRIAR USU√ÅRIO
    console.log('üë§ 1. Criando usu√°rio...');
    const timestamp = Date.now();
    const novoUsuario = await createUser({
      email: `vendedor${timestamp}@exemplo.com`,
      name: 'Jo√£o Vendedor',
      password: 'senha123456',
      role: 'USER'
    });
    console.log('‚úÖ Usu√°rio criado:', novoUsuario);
    console.log('');

    // 2. LISTAR PRODUTOS
    console.log('üì¶ 2. Listando produtos dispon√≠veis...');
    const produtos = await getProducts({ active: true });
    console.log('‚úÖ Produtos encontrados:', produtos.length);
    
    // Se n√£o houver produtos, criar alguns exemplos
    if (produtos.length === 0) {
      console.log('üì¶ Criando produtos de exemplo...');
      
      const produto1 = await createProduct({
        name: 'Coca-Cola 350ml',
        price: 4.50,
        description: 'Refrigerante Coca-Cola lata 350ml'
      });
      
      const produto2 = await createProduct({
        name: 'P√£o de A√ß√∫car',
        price: 0.75,
        description: 'P√£o de a√ß√∫car tradicional'
      });
      
      console.log('‚úÖ Produtos criados:', [produto1, produto2]);
    }
    console.log('');

    // 3. ABRIR CAIXA
    console.log('üí∞ 3. Abrindo caixa registradora...');
    const caixaAberto = await openCashRegister(novoUsuario.id, 100.00);
    console.log('‚úÖ Caixa aberto:', caixaAberto);
    console.log('');

    // 4. REGISTRAR VENDA
    console.log('üõí 4. Registrando venda...');
    const produtosAtualizados = await getProducts({ active: true });
    
    if (produtosAtualizados.length > 0) {
      const venda = await createSale({
        cashRegisterId: caixaAberto.id,
        userId: novoUsuario.id,
        items: [
          {
            productId: produtosAtualizados[0].id,
            quantity: 2,
            price: produtosAtualizados[0].price,
            name: produtosAtualizados[0].name
          }
        ],
        total: produtosAtualizados[0].price * 2,
        paymentMethod: 'cash'
      });
      
      console.log('‚úÖ Venda registrada:', venda);
      
      // Completar a venda
      const vendaCompleta = await completeSale(venda.id);
      console.log('‚úÖ Venda completada:', vendaCompleta);
    }
    console.log('');

    // 5. FECHAR CAIXA
    console.log('üîí 5. Fechando caixa registradora...');
    const caixaFechado = await closeCashRegister(caixaAberto.id, 150.00);
    console.log('‚úÖ Caixa fechado:', caixaFechado);
    console.log('');

    console.log('üéâ Exemplo completo executado com sucesso!');

  } catch (error) {
    console.error('‚ùå Erro durante a execu√ß√£o:', error.message);
  }
}

/**
 * Exemplos individuais de cada servi√ßo
 */
async function exemploUsuarios() {
  console.log('\nüë• === EXEMPLOS DE USU√ÅRIOS ===');
  
  try {
    // Listar usu√°rios
    const usuarios = await getUsers();
    console.log('üìã Usu√°rios cadastrados:', usuarios.length);
    
    // Criar novo usu√°rio
    const timestamp = Date.now();
    const novoUsuario = await createUser({
      email: `usuario${timestamp}@exemplo.com`,
      name: 'Usuario Teste',
      password: 'senha123456',
      role: 'USER'
    });
    console.log('‚úÖ Novo usu√°rio criado:', novoUsuario.name);
    
  } catch (error) {
    console.error('‚ùå Erro nos usu√°rios:', error.message);
  }
}

async function exemploProdutos() {
  console.log('\nüì¶ === EXEMPLOS DE PRODUTOS ===');
  
  try {
    // Listar produtos ativos
    const produtos = await getProducts({ active: true });
    console.log('üìã Produtos ativos:', produtos.length);
    
    // Criar novo produto
    const novoProduto = await createProduct({
      name: '√Ågua Mineral 500ml',
      price: 2.00,
      description: '√Ågua mineral natural 500ml'
    });
    console.log('‚úÖ Novo produto criado:', novoProduto.name);
    
  } catch (error) {
    console.error('‚ùå Erro nos produtos:', error.message);
  }
}

async function exemploCaixas() {
  console.log('\nüí∞ === EXEMPLOS DE CAIXAS ===');
  
  try {
    // Listar caixas
    const caixas = await getCashRegisters();
    console.log('üìã Caixas registradas:', caixas.length);
    
    // Listar apenas caixas abertas
    const caixasAbertas = await getCashRegisters({ status: 'open' });
    console.log('üîì Caixas abertas:', caixasAbertas.length);
    
  } catch (error) {
    console.error('‚ùå Erro nas caixas:', error.message);
  }
}

async function exemploVendas() {
  console.log('\nüõí === EXEMPLOS DE VENDAS ===');
  
  try {
    // Listar vendas
    const vendas = await getSales();
    console.log('üìã Vendas registradas:', vendas.length);
    
    // Listar vendas completadas
    const vendasCompletas = await getSales({ status: 'completed' });
    console.log('‚úÖ Vendas completadas:', vendasCompletas.length);
    
  } catch (error) {
    console.error('‚ùå Erro nas vendas:', error.message);
  }
}

/**
 * Fun√ß√£o para executar exemplos espec√≠ficos
 */
async function executarExemplos() {
  const args = process.argv.slice(2);
  const comando = args[0];
  
  switch (comando) {
    case 'completo':
      await exemploCompleto();
      break;
    case 'usuarios':
      await exemploUsuarios();
      break;
    case 'produtos':
      await exemploProdutos();
      break;
    case 'caixas':
      await exemploCaixas();
      break;
    case 'vendas':
      await exemploVendas();
      break;
    default:
      console.log('\nüéØ Cliente da API PDV Rafa');
      console.log('\nComandos dispon√≠veis:');
      console.log('  node index.js completo   - Executa exemplo completo do fluxo');
      console.log('  node index.js usuarios   - Exemplos de opera√ß√µes com usu√°rios');
      console.log('  node index.js produtos   - Exemplos de opera√ß√µes com produtos');
      console.log('  node index.js caixas     - Exemplos de opera√ß√µes com caixas');
      console.log('  node index.js vendas     - Exemplos de opera√ß√µes com vendas');
      console.log('\nüí° Exemplo: node index.js completo');
      break;
  }
}

// Executar se o arquivo for chamado diretamente
// Comentado para evitar execu√ß√£o autom√°tica que causa conflitos
// if (require.main === module) {
//   executarExemplos();
// }

// Exportar fun√ß√µes para uso em outros m√≥dulos
module.exports = {
  exemploCompleto,
  exemploUsuarios,
  exemploProdutos,
  exemploCaixas,
  exemploVendas
};
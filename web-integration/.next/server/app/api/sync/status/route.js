"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/sync/status/route";
exports.ids = ["app/api/sync/status/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsync%2Fstatus%2Froute&page=%2Fapi%2Fsync%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Fstatus%2Froute.ts&appDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsync%2Fstatus%2Froute&page=%2Fapi%2Fsync%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Fstatus%2Froute.ts&appDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Auxiliadora_Pay_web_integration_src_app_api_sync_status_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/sync/status/route.ts */ \"(rsc)/./src/app/api/sync/status/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/sync/status/route\",\n        pathname: \"/api/sync/status\",\n        filename: \"route\",\n        bundlePath: \"app/api/sync/status/route\"\n    },\n    resolvedPagePath: \"C:\\\\Auxiliadora-Pay\\\\web-integration\\\\src\\\\app\\\\api\\\\sync\\\\status\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Auxiliadora_Pay_web_integration_src_app_api_sync_status_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/sync/status/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzeW5jJTJGc3RhdHVzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZzeW5jJTJGc3RhdHVzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGc3luYyUyRnN0YXR1cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDQXV4aWxpYWRvcmEtUGF5JTVDd2ViLWludGVncmF0aW9uJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDQXV4aWxpYWRvcmEtUGF5JTVDd2ViLWludGVncmF0aW9uJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzJCO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXV4aWxpYWRvcmEtcGF5LXdlYi1pbnRlZ3JhdGlvbi8/MDliOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxBdXhpbGlhZG9yYS1QYXlcXFxcd2ViLWludGVncmF0aW9uXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHN5bmNcXFxcc3RhdHVzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9zeW5jL3N0YXR1cy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N5bmMvc3RhdHVzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9zeW5jL3N0YXR1cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXEF1eGlsaWFkb3JhLVBheVxcXFx3ZWItaW50ZWdyYXRpb25cXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcc3luY1xcXFxzdGF0dXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc3luYy9zdGF0dXMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsync%2Fstatus%2Froute&page=%2Fapi%2Fsync%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Fstatus%2Froute.ts&appDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/sync/status/route.ts":
/*!******************************************!*\
  !*** ./src/app/api/sync/status/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_sync_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/sync-service */ \"(rsc)/./src/lib/sync-service.ts\");\n\n\nasync function GET() {\n    try {\n        const status = await _lib_sync_service__WEBPACK_IMPORTED_MODULE_1__.syncService.getStatus();\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: status\n        });\n    } catch (error) {\n        console.error(\"Erro ao obter status de sincroniza\\xe7\\xe3o:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Erro interno do servidor\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { action } = body;\n        switch(action){\n            case \"start\":\n                _lib_sync_service__WEBPACK_IMPORTED_MODULE_1__.syncService.startAutoSync();\n                break;\n            case \"stop\":\n                _lib_sync_service__WEBPACK_IMPORTED_MODULE_1__.syncService.stopAutoSync();\n                break;\n            case \"force\":\n                await _lib_sync_service__WEBPACK_IMPORTED_MODULE_1__.syncService.forcSync();\n                break;\n            default:\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    error: \"A\\xe7\\xe3o inv\\xe1lida\"\n                }, {\n                    status: 400\n                });\n        }\n        const status = await _lib_sync_service__WEBPACK_IMPORTED_MODULE_1__.syncService.getStatus();\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: status\n        });\n    } catch (error) {\n        console.error(\"Erro ao executar a\\xe7\\xe3o de sincroniza\\xe7\\xe3o:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            error: \"Erro interno do servidor\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9zeW5jL3N0YXR1cy9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdEO0FBQ1A7QUFFMUMsZUFBZUU7SUFDcEIsSUFBSTtRQUNGLE1BQU1DLFNBQVMsTUFBTUYsMERBQVdBLENBQUNHLFNBQVM7UUFFMUMsT0FBT0osa0ZBQVlBLENBQUNLLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNUQyxNQUFNSjtRQUNSO0lBQ0YsRUFBRSxPQUFPSyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyxnREFBMENBO1FBRXhELE9BQU9SLGtGQUFZQSxDQUFDSyxJQUFJLENBQ3RCO1lBQ0VDLFNBQVM7WUFDVEUsT0FBTztRQUNULEdBQ0E7WUFBRUwsUUFBUTtRQUFJO0lBRWxCO0FBQ0Y7QUFFTyxlQUFlTyxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0YsTUFBTUMsT0FBTyxNQUFNRCxRQUFRTixJQUFJO1FBQy9CLE1BQU0sRUFBRVEsTUFBTSxFQUFFLEdBQUdEO1FBRW5CLE9BQVFDO1lBQ04sS0FBSztnQkFDSFosMERBQVdBLENBQUNhLGFBQWE7Z0JBQ3pCO1lBQ0YsS0FBSztnQkFDSGIsMERBQVdBLENBQUNjLFlBQVk7Z0JBQ3hCO1lBQ0YsS0FBSztnQkFDSCxNQUFNZCwwREFBV0EsQ0FBQ2UsUUFBUTtnQkFDMUI7WUFDRjtnQkFDRSxPQUFPaEIsa0ZBQVlBLENBQUNLLElBQUksQ0FDdEI7b0JBQUVHLE9BQU87Z0JBQWdCLEdBQ3pCO29CQUFFTCxRQUFRO2dCQUFJO1FBRXBCO1FBRUEsTUFBTUEsU0FBUyxNQUFNRiwwREFBV0EsQ0FBQ0csU0FBUztRQUUxQyxPQUFPSixrRkFBWUEsQ0FBQ0ssSUFBSSxDQUFDO1lBQ3ZCQyxTQUFTO1lBQ1RDLE1BQU1KO1FBQ1I7SUFDRixFQUFFLE9BQU9LLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVEQUEyQ0E7UUFFekQsT0FBT1Isa0ZBQVlBLENBQUNLLElBQUksQ0FDdEI7WUFDRUMsU0FBUztZQUNURSxPQUFPO1FBQ1QsR0FDQTtZQUFFTCxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2F1eGlsaWFkb3JhLXBheS13ZWItaW50ZWdyYXRpb24vLi9zcmMvYXBwL2FwaS9zeW5jL3N0YXR1cy9yb3V0ZS50cz8zMDEzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBzeW5jU2VydmljZSB9IGZyb20gJ0AvbGliL3N5bmMtc2VydmljZSc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc3RhdHVzID0gYXdhaXQgc3luY1NlcnZpY2UuZ2V0U3RhdHVzKCk7XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiBzdGF0dXNcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIG9idGVyIHN0YXR1cyBkZSBzaW5jcm9uaXphw6fDo286JywgZXJyb3IpO1xuICAgIFxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnRXJybyBpbnRlcm5vIGRvIHNlcnZpZG9yJ1xuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgeyBhY3Rpb24gfSA9IGJvZHk7XG4gICAgXG4gICAgc3dpdGNoIChhY3Rpb24pIHtcbiAgICAgIGNhc2UgJ3N0YXJ0JzpcbiAgICAgICAgc3luY1NlcnZpY2Uuc3RhcnRBdXRvU3luYygpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3N0b3AnOlxuICAgICAgICBzeW5jU2VydmljZS5zdG9wQXV0b1N5bmMoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdmb3JjZSc6XG4gICAgICAgIGF3YWl0IHN5bmNTZXJ2aWNlLmZvcmNTeW5jKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICAgIHsgZXJyb3I6ICdBw6fDo28gaW52w6FsaWRhJyB9LFxuICAgICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgICApO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBzdGF0dXMgPSBhd2FpdCBzeW5jU2VydmljZS5nZXRTdGF0dXMoKTtcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHN0YXR1c1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gZXhlY3V0YXIgYcOnw6NvIGRlIHNpbmNyb25pemHDp8OjbzonLCBlcnJvcik7XG4gICAgXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAge1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdFcnJvIGludGVybm8gZG8gc2Vydmlkb3InXG4gICAgICB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJzeW5jU2VydmljZSIsIkdFVCIsInN0YXR1cyIsImdldFN0YXR1cyIsImpzb24iLCJzdWNjZXNzIiwiZGF0YSIsImVycm9yIiwiY29uc29sZSIsIlBPU1QiLCJyZXF1ZXN0IiwiYm9keSIsImFjdGlvbiIsInN0YXJ0QXV0b1N5bmMiLCJzdG9wQXV0b1N5bmMiLCJmb3JjU3luYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/sync/status/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/api-client.ts":
/*!*******************************!*\
  !*** ./src/lib/api-client.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuxiliadoraPayApiClient: () => (/* binding */ AuxiliadoraPayApiClient),\n/* harmony export */   apiClient: () => (/* binding */ apiClient),\n/* harmony export */   auxiliadoraApiClient: () => (/* binding */ auxiliadoraApiClient),\n/* harmony export */   createApiClient: () => (/* binding */ createApiClient)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\n/**\n * Cliente para comunicação com a API Auxiliadora Pay\n */ class AuxiliadoraPayApiClient {\n    constructor(config = {}){\n        this.baseURL = config.baseURL || \"https://www.auxiliadorapay.shop/api\" || 0;\n        this.apiKey = config.apiKey || process.env.AUXILIADORA_API_KEY;\n        this.timeout = config.timeout || parseInt(process.env.AUXILIADORA_API_TIMEOUT || \"30000\");\n        this.retryAttempts = config.retryAttempts || 3;\n        this.client = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n            baseURL: this.baseURL,\n            timeout: this.timeout,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...this.apiKey && {\n                    \"Authorization\": `Bearer ${this.apiKey}`\n                }\n            }\n        });\n        this.setupInterceptors();\n    }\n    /**\n   * Configura interceptors para logging e tratamento de erros\n   */ setupInterceptors() {\n        // Request interceptor\n        this.client.interceptors.request.use((config)=>{\n            console.log(\"API Request\", {\n                method: config.method?.toUpperCase(),\n                url: config.url,\n                data: config.data\n            });\n            return config;\n        }, (error)=>{\n            console.error(\"API Request Error\", error);\n            return Promise.reject(error);\n        });\n        // Response interceptor\n        this.client.interceptors.response.use((response)=>{\n            console.log(\"API Response\", {\n                status: response.status,\n                url: response.config.url,\n                data: response.data\n            });\n            return response;\n        }, (error)=>{\n            const apiError = {\n                message: error.response?.data?.message || error.message,\n                status: error.response?.status || 500,\n                code: error.response?.data?.code,\n                details: error.response?.data\n            };\n            console.error(\"API Response Error\", apiError);\n            return Promise.reject(apiError);\n        });\n    }\n    /**\n   * Executa uma requisição com retry automático\n   */ async requestWithRetry(config, attempt = 1) {\n        try {\n            return await this.client.request(config);\n        } catch (error) {\n            if (attempt < this.retryAttempts && this.shouldRetry(error)) {\n                const delay = Math.pow(2, attempt) * 1000; // Exponential backoff\n                console.warn(`Retrying request in ${delay}ms (attempt ${attempt + 1}/${this.retryAttempts})`);\n                await new Promise((resolve)=>setTimeout(resolve, delay));\n                return this.requestWithRetry(config, attempt + 1);\n            }\n            throw error;\n        }\n    }\n    /**\n   * Determina se uma requisição deve ser repetida\n   */ shouldRetry(error) {\n        // Retry em casos de erro de rede ou timeout\n        return !error.response || error.response.status >= 500 || error.response.status === 429 || error.code === \"ECONNABORTED\";\n    }\n    /**\n   * Testa a conectividade com a API\n   */ async healthCheck() {\n        try {\n            // Usar endpoint de usuários para verificar conectividade\n            await this.requestWithRetry({\n                method: \"GET\",\n                url: \"/users\",\n                timeout: 5000\n            });\n            return true;\n        } catch (error) {\n            console.error(\"Health check failed\", error);\n            return false;\n        }\n    }\n    // ==================== USUÁRIOS ====================\n    /**\n   * Lista todos os usuários\n   */ async getUsers(filters = {}) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/users\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca um usuário por ID\n   */ async getUserById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: `/users/${id}`\n        });\n        return response.data;\n    }\n    /**\n   * Cria um novo usuário\n   */ async createUser(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/users\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza um usuário\n   */ async updateUser(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: `/users/${id}`,\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove um usuário\n   */ async deleteUser(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: `/users/${id}`\n        });\n    }\n    // ==================== PRODUTOS ====================\n    /**\n   * Lista todos os produtos\n   */ async getProducts(filters = {}) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/products\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca um produto por ID\n   */ async getProductById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: `/products/${id}`\n        });\n        return response.data;\n    }\n    /**\n   * Cria um novo produto\n   */ async createProduct(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/products\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza um produto\n   */ async updateProduct(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: `/products/${id}`,\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove um produto\n   */ async deleteProduct(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: `/products/${id}`\n        });\n    }\n    // ==================== CAIXAS REGISTRADORAS ====================\n    /**\n   * Lista todas as caixas registradoras\n   */ async getCashRegisters(filters = {}) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/cash-registers\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca uma caixa registradora por ID\n   */ async getCashRegisterById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: `/cash-registers/${id}`\n        });\n        return response.data;\n    }\n    /**\n   * Cria uma nova caixa registradora\n   */ async createCashRegister(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/cash-registers\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza uma caixa registradora\n   */ async updateCashRegister(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: `/cash-registers/${id}`,\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove uma caixa registradora\n   */ async deleteCashRegister(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: `/cash-registers/${id}`\n        });\n    }\n    // ==================== VENDAS ====================\n    /**\n   * Lista todas as vendas\n   */ async getSales(filters = {}) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/sales\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca uma venda por ID\n   */ async getSaleById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: `/sales/${id}`\n        });\n        return response.data;\n    }\n    /**\n   * Cria uma nova venda\n   */ async createSale(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/sales\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza uma venda\n   */ async updateSale(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: `/sales/${id}`,\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove uma venda\n   */ async deleteSale(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: `/sales/${id}`\n        });\n    }\n    // ==================== MÉTODOS UTILITÁRIOS ====================\n    /**\n   * Atualiza a configuração do cliente\n   */ updateConfig(config) {\n        if (config.baseURL) {\n            this.baseURL = config.baseURL;\n            this.client.defaults.baseURL = config.baseURL;\n        }\n        if (config.apiKey) {\n            this.apiKey = config.apiKey;\n            this.client.defaults.headers.common[\"Authorization\"] = `Bearer ${config.apiKey}`;\n        }\n        if (config.timeout) {\n            this.timeout = config.timeout;\n            this.client.defaults.timeout = config.timeout;\n        }\n        if (config.retryAttempts) {\n            this.retryAttempts = config.retryAttempts;\n        }\n    }\n    /**\n   * Obtém estatísticas da API\n   */ async getApiStats() {\n        // Esta seria uma implementação personalizada baseada nos logs\n        // Por enquanto, retorna dados mock\n        return {\n            totalRequests: 0,\n            averageResponseTime: 0,\n            errorRate: 0\n        };\n    }\n}\n// Instância singleton do cliente\nconst auxiliadoraApiClient = new AuxiliadoraPayApiClient();\n// Exportação para compatibilidade\nconst apiClient = auxiliadoraApiClient;\n// Função helper para criar uma nova instância com configuração específica\nconst createApiClient = (config)=>new AuxiliadoraPayApiClient(config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/api-client.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/sync-service.ts":
/*!*********************************!*\
  !*** ./src/lib/sync-service.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   offlineOperations: () => (/* binding */ offlineOperations),\n/* harmony export */   syncService: () => (/* binding */ syncService)\n/* harmony export */ });\n/* harmony import */ var _api_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-client */ \"(rsc)/./src/lib/api-client.ts\");\n\nclass SyncService {\n    constructor(){\n        this.syncInterval = null;\n        this.pendingOperations = [];\n        this.isOnline = true;\n        this.lastSync = new Date();\n        this.maxRetries = 3;\n        this.syncIntervalMs = 5 * 60 * 1000 // 5 minutos\n        ;\n        this.listeners = [];\n        this.initializeSync();\n        this.setupNetworkMonitoring();\n    }\n    /**\n   * Inicializa o serviço de sincronização\n   */ initializeSync() {\n        // Carregar operações pendentes do localStorage\n        this.loadPendingOperations();\n        // Iniciar sincronização automática\n        this.startAutoSync();\n        console.log(\"Servi\\xe7o de sincroniza\\xe7\\xe3o inicializado\");\n    }\n    /**\n   * Configura monitoramento de rede\n   */ setupNetworkMonitoring() {\n        if (false) {}\n    }\n    /**\n   * Inicia sincronização automática\n   */ startAutoSync() {\n        if (this.syncInterval) {\n            clearInterval(this.syncInterval);\n        }\n        this.syncInterval = setInterval(()=>{\n            this.sync();\n        }, this.syncIntervalMs);\n    }\n    /**\n   * Para sincronização automática\n   */ stopAutoSync() {\n        if (this.syncInterval) {\n            clearInterval(this.syncInterval);\n            this.syncInterval = null;\n        }\n    }\n    /**\n   * Configura intervalo de sincronização\n   */ setSyncInterval(minutes) {\n        this.syncIntervalMs = minutes * 60 * 1000;\n        this.startAutoSync();\n    }\n    /**\n   * Executa sincronização completa\n   */ async sync() {\n        if (!this.isOnline) {\n            console.warn(\"Tentativa de sincroniza\\xe7\\xe3o sem conex\\xe3o\");\n            return;\n        }\n        try {\n            console.log(\"Iniciando sincroniza\\xe7\\xe3o\");\n            // Processar operações pendentes primeiro\n            await this.processPendingOperations();\n            // Sincronizar dados do servidor\n            await this.syncFromServer();\n            this.lastSync = new Date();\n            this.notifyListeners();\n            console.log(\"Sincroniza\\xe7\\xe3o conclu\\xedda com sucesso\");\n        } catch (error) {\n            console.error(\"Erro durante sincroniza\\xe7\\xe3o:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Processa operações pendentes\n   */ async processPendingOperations() {\n        const operations = [\n            ...this.pendingOperations\n        ];\n        for (const operation of operations){\n            try {\n                await this.executeOperation(operation);\n                this.removePendingOperation(operation.id);\n                console.log(`Operação ${operation.id} executada com sucesso`);\n            } catch (error) {\n                operation.retryCount++;\n                if (operation.retryCount >= this.maxRetries) {\n                    console.error(`Operação ${operation.id} falhou após ${this.maxRetries} tentativas:`, error);\n                    this.removePendingOperation(operation.id);\n                } else {\n                    console.warn(`Operação ${operation.id} falhou, tentativa ${operation.retryCount}/${this.maxRetries}:`, error);\n                }\n            }\n        }\n        this.savePendingOperations();\n    }\n    /**\n   * Executa uma operação específica\n   */ async executeOperation(operation) {\n        switch(operation.entity){\n            case \"sale\":\n                await this.executeSaleOperation(operation);\n                break;\n            case \"product\":\n                await this.executeProductOperation(operation);\n                break;\n            case \"user\":\n                await this.executeUserOperation(operation);\n                break;\n            case \"cashRegister\":\n                await this.executeCashRegisterOperation(operation);\n                break;\n            default:\n                throw new Error(`Tipo de entidade não suportado: ${operation.entity}`);\n        }\n    }\n    /**\n   * Executa operação de venda\n   */ async executeSaleOperation(operation) {\n        switch(operation.type){\n            case \"CREATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.createSale(operation.data);\n                break;\n            case \"UPDATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.updateSale(operation.data.id, operation.data);\n                break;\n            case \"DELETE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.deleteSale(operation.data.id);\n                break;\n        }\n    }\n    /**\n   * Executa operação de produto\n   */ async executeProductOperation(operation) {\n        switch(operation.type){\n            case \"CREATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.createProduct(operation.data);\n                break;\n            case \"UPDATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.updateProduct(operation.data.id, operation.data);\n                break;\n            case \"DELETE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.deleteProduct(operation.data.id);\n                break;\n        }\n    }\n    /**\n   * Executa operação de usuário\n   */ async executeUserOperation(operation) {\n        switch(operation.type){\n            case \"CREATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.createUser(operation.data);\n                break;\n            case \"UPDATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.updateUser(operation.data.id, operation.data);\n                break;\n            case \"DELETE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.deleteUser(operation.data.id);\n                break;\n        }\n    }\n    /**\n   * Executa operação de caixa registradora\n   */ async executeCashRegisterOperation(operation) {\n        switch(operation.type){\n            case \"CREATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.createCashRegister(operation.data);\n                break;\n            case \"UPDATE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.updateCashRegister(operation.data.id, operation.data);\n                break;\n            case \"DELETE\":\n                await _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.deleteCashRegister(operation.data.id);\n                break;\n        }\n    }\n    /**\n   * Sincroniza dados do servidor\n   */ async syncFromServer() {\n        try {\n            // Buscar dados atualizados do servidor\n            const [sales, products, users, cashRegisters] = await Promise.all([\n                _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.getSales(),\n                _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.getProducts(),\n                _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.getUsers(),\n                _api_client__WEBPACK_IMPORTED_MODULE_0__.auxiliadoraApiClient.getCashRegisters()\n            ]);\n            // Atualizar cache local (se implementado)\n            this.updateLocalCache();\n            console.log(`Sincronizados: ${sales.length} vendas, ${products.length} produtos, ${users.length} usuários, ${cashRegisters.length} caixas`);\n        } catch (error) {\n            console.error(\"Erro ao sincronizar dados do servidor:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Atualiza cache local\n   */ updateLocalCache() {\n        // Implementar cache local se necessário\n        // Por exemplo, usando IndexedDB ou localStorage\n        console.log(\"Cache local atualizado\");\n    }\n    /**\n   * Adiciona operação pendente\n   */ addPendingOperation(type, entity, data) {\n        const operation = {\n            id: `${entity}_${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n            type,\n            entity,\n            data,\n            timestamp: new Date(),\n            retryCount: 0\n        };\n        this.pendingOperations.push(operation);\n        this.savePendingOperations();\n        this.notifyListeners();\n        console.log(`Operação pendente adicionada: ${operation.id}`);\n        // Tentar executar imediatamente se online\n        if (this.isOnline) {\n            this.processPendingOperations().catch((error)=>{\n                console.error(\"Erro ao processar opera\\xe7\\xe3o pendente:\", error);\n            });\n        }\n        return operation.id;\n    }\n    /**\n   * Remove operação pendente\n   */ removePendingOperation(id) {\n        this.pendingOperations = this.pendingOperations.filter((op)=>op.id !== id);\n        this.savePendingOperations();\n        this.notifyListeners();\n    }\n    /**\n   * Salva operações pendentes no localStorage\n   */ savePendingOperations() {\n        if (false) {}\n    }\n    /**\n   * Carrega operações pendentes do localStorage\n   */ loadPendingOperations() {\n        if (false) {}\n    }\n    /**\n   * Obtém status da sincronização\n   */ getStatus() {\n        return {\n            lastSync: this.lastSync,\n            pendingOperations: this.pendingOperations.length,\n            isOnline: this.isOnline,\n            errors: this.pendingOperations.filter((op)=>op.retryCount >= this.maxRetries).map((op)=>`Operação ${op.id} falhou após ${this.maxRetries} tentativas`)\n        };\n    }\n    /**\n   * Adiciona listener para mudanças de status\n   */ addStatusListener(listener) {\n        this.listeners.push(listener);\n    }\n    /**\n   * Remove listener\n   */ removeStatusListener(listener) {\n        this.listeners = this.listeners.filter((l)=>l !== listener);\n    }\n    /**\n   * Notifica listeners sobre mudanças\n   */ notifyListeners() {\n        const status = this.getStatus();\n        this.listeners.forEach((listener)=>{\n            try {\n                listener(status);\n            } catch (error) {\n                console.error(\"Erro ao notificar listener:\", error);\n            }\n        });\n    }\n    /**\n   * Limpa todas as operações pendentes\n   */ clearPendingOperations() {\n        this.pendingOperations = [];\n        this.savePendingOperations();\n        this.notifyListeners();\n        console.log(\"Opera\\xe7\\xf5es pendentes limpas\");\n    }\n    /**\n   * Força sincronização manual\n   */ async forcSync() {\n        console.log(\"Sincroniza\\xe7\\xe3o manual iniciada\");\n        await this.sync();\n    }\n    /**\n   * Método para tentar novamente uma venda específica\n   */ async retrySale(saleId) {\n        const pendingOp = this.pendingOperations.find((op)=>op.id === saleId && op.entity === \"sale\");\n        if (!pendingOp) {\n            throw new Error(\"Venda n\\xe3o encontrada nas opera\\xe7\\xf5es pendentes\");\n        }\n        try {\n            await this.executeOperation(pendingOp);\n            this.removePendingOperation(saleId);\n            this.notifyListeners();\n            console.log(`Venda ${saleId} sincronizada com sucesso`);\n        } catch (error) {\n            pendingOp.retryCount++;\n            this.savePendingOperations();\n            this.notifyListeners();\n            console.error(`Erro ao tentar sincronizar venda ${saleId}:`, error);\n            throw error;\n        }\n    }\n    /**\n   * Método para obter vendas pendentes\n   */ getPendingSales() {\n        return this.pendingOperations.filter((op)=>op.entity === \"sale\");\n    }\n    /**\n   * Método para adicionar venda pendente\n   */ addPendingSale(sale) {\n        return this.addPendingOperation(\"CREATE\", \"sale\", sale);\n    }\n    /**\n   * Destrói o serviço\n   */ destroy() {\n        this.stopAutoSync();\n        this.listeners = [];\n        console.log(\"Servi\\xe7o de sincroniza\\xe7\\xe3o destru\\xeddo\");\n    }\n}\n// Instância singleton\nconst syncService = new SyncService();\n// Funções de conveniência para operações offline\nconst offlineOperations = {\n    createSale: (data)=>syncService.addPendingOperation(\"CREATE\", \"sale\", data),\n    updateSale: (data)=>syncService.addPendingOperation(\"UPDATE\", \"sale\", data),\n    deleteSale: (data)=>syncService.addPendingOperation(\"DELETE\", \"sale\", data),\n    createProduct: (data)=>syncService.addPendingOperation(\"CREATE\", \"product\", data),\n    updateProduct: (data)=>syncService.addPendingOperation(\"UPDATE\", \"product\", data),\n    deleteProduct: (data)=>syncService.addPendingOperation(\"DELETE\", \"product\", data),\n    createUser: (data)=>syncService.addPendingOperation(\"CREATE\", \"user\", data),\n    updateUser: (data)=>syncService.addPendingOperation(\"UPDATE\", \"user\", data),\n    deleteUser: (data)=>syncService.addPendingOperation(\"DELETE\", \"user\", data),\n    createCashRegister: (data)=>syncService.addPendingOperation(\"CREATE\", \"cashRegister\", data),\n    updateCashRegister: (data)=>syncService.addPendingOperation(\"UPDATE\", \"cashRegister\", data),\n    deleteCashRegister: (data)=>syncService.addPendingOperation(\"DELETE\", \"cashRegister\", data)\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (syncService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/sync-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/mime-db","vendor-chunks/follow-redirects","vendor-chunks/debug","vendor-chunks/get-intrinsic","vendor-chunks/form-data","vendor-chunks/asynckit","vendor-chunks/combined-stream","vendor-chunks/mime-types","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/has-symbols","vendor-chunks/delayed-stream","vendor-chunks/function-bind","vendor-chunks/es-set-tostringtag","vendor-chunks/call-bind-apply-helpers","vendor-chunks/get-proto","vendor-chunks/dunder-proto","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/has-flag","vendor-chunks/es-define-property","vendor-chunks/gopd","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/es-object-atoms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsync%2Fstatus%2Froute&page=%2Fapi%2Fsync%2Fstatus%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsync%2Fstatus%2Froute.ts&appDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CAuxiliadora-Pay%5Cweb-integration&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();
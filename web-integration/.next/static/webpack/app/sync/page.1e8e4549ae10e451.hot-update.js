"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/sync/page",{

/***/ "(app-pages-browser)/./src/lib/api-client.ts":
/*!*******************************!*\
  !*** ./src/lib/api-client.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuxiliadoraPayApiClient: function() { return /* binding */ AuxiliadoraPayApiClient; },\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; },\n/* harmony export */   auxiliadoraApiClient: function() { return /* binding */ auxiliadoraApiClient; },\n/* harmony export */   createApiClient: function() { return /* binding */ createApiClient; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n/**\n * Cliente para comunicação com a API Auxiliadora Pay\n */ class AuxiliadoraPayApiClient {\n    /**\n   * Configura interceptors para logging e tratamento de erros\n   */ setupInterceptors() {\n        // Request interceptor\n        this.client.interceptors.request.use((config)=>{\n            var _config_method;\n            console.log(\"API Request\", {\n                method: (_config_method = config.method) === null || _config_method === void 0 ? void 0 : _config_method.toUpperCase(),\n                url: config.url,\n                data: config.data\n            });\n            return config;\n        }, (error)=>{\n            console.error(\"API Request Error\", error);\n            return Promise.reject(error);\n        });\n        // Response interceptor\n        this.client.interceptors.response.use((response)=>{\n            console.log(\"API Response\", {\n                status: response.status,\n                url: response.config.url,\n                data: response.data\n            });\n            return response;\n        }, (error)=>{\n            var _error_response_data, _error_response, _error_response1, _error_response_data1, _error_response2, _error_response3;\n            const apiError = {\n                message: ((_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || error.message,\n                status: ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status) || 500,\n                code: (_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : (_error_response_data1 = _error_response2.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.code,\n                details: (_error_response3 = error.response) === null || _error_response3 === void 0 ? void 0 : _error_response3.data\n            };\n            console.error(\"API Response Error\", apiError);\n            return Promise.reject(apiError);\n        });\n    }\n    /**\n   * Executa uma requisição com retry automático\n   */ async requestWithRetry(config) {\n        let attempt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n        try {\n            return await this.client.request(config);\n        } catch (error) {\n            if (attempt < this.retryAttempts && this.shouldRetry(error)) {\n                const delay = Math.pow(2, attempt) * 1000; // Exponential backoff\n                console.warn(\"Retrying request in \".concat(delay, \"ms (attempt \").concat(attempt + 1, \"/\").concat(this.retryAttempts, \")\"));\n                await new Promise((resolve)=>setTimeout(resolve, delay));\n                return this.requestWithRetry(config, attempt + 1);\n            }\n            throw error;\n        }\n    }\n    /**\n   * Determina se uma requisição deve ser repetida\n   */ shouldRetry(error) {\n        // Retry em casos de erro de rede ou timeout\n        return !error.response || error.response.status >= 500 || error.response.status === 429 || error.code === \"ECONNABORTED\";\n    }\n    /**\n   * Testa a conectividade com a API\n   */ async healthCheck() {\n        try {\n            // Usar endpoint de usuários para verificar conectividade\n            await this.requestWithRetry({\n                method: \"GET\",\n                url: \"/users\",\n                timeout: 5000\n            });\n            return true;\n        } catch (error) {\n            console.error(\"Health check failed\", error);\n            return false;\n        }\n    }\n    // ==================== USUÁRIOS ====================\n    /**\n   * Lista todos os usuários\n   */ async getUsers() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/users\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca um usuário por ID\n   */ async getUserById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/users/\".concat(id)\n        });\n        return response.data;\n    }\n    /**\n   * Cria um novo usuário\n   */ async createUser(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/users\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza um usuário\n   */ async updateUser(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: \"/users/\".concat(id),\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove um usuário\n   */ async deleteUser(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: \"/users/\".concat(id)\n        });\n    }\n    // ==================== PRODUTOS ====================\n    /**\n   * Lista todos os produtos\n   */ async getProducts() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/products\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca um produto por ID\n   */ async getProductById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/products/\".concat(id)\n        });\n        return response.data;\n    }\n    /**\n   * Cria um novo produto\n   */ async createProduct(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/products\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza um produto\n   */ async updateProduct(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: \"/products/\".concat(id),\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove um produto\n   */ async deleteProduct(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: \"/products/\".concat(id)\n        });\n    }\n    // ==================== CAIXAS REGISTRADORAS ====================\n    /**\n   * Lista todas as caixas registradoras\n   */ async getCashRegisters() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/cash-registers\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca uma caixa registradora por ID\n   */ async getCashRegisterById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/cash-registers/\".concat(id)\n        });\n        return response.data;\n    }\n    /**\n   * Cria uma nova caixa registradora\n   */ async createCashRegister(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/cash-registers\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza uma caixa registradora\n   */ async updateCashRegister(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: \"/cash-registers/\".concat(id),\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove uma caixa registradora\n   */ async deleteCashRegister(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: \"/cash-registers/\".concat(id)\n        });\n    }\n    // ==================== VENDAS ====================\n    /**\n   * Lista todas as vendas\n   */ async getSales() {\n        let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/sales\",\n            params: filters\n        });\n        return response.data;\n    }\n    /**\n   * Busca uma venda por ID\n   */ async getSaleById(id) {\n        const response = await this.requestWithRetry({\n            method: \"GET\",\n            url: \"/sales/\".concat(id)\n        });\n        return response.data;\n    }\n    /**\n   * Cria uma nova venda\n   */ async createSale(data) {\n        const response = await this.requestWithRetry({\n            method: \"POST\",\n            url: \"/sales\",\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Atualiza uma venda\n   */ async updateSale(id, data) {\n        const response = await this.requestWithRetry({\n            method: \"PUT\",\n            url: \"/sales/\".concat(id),\n            data\n        });\n        return response.data;\n    }\n    /**\n   * Remove uma venda\n   */ async deleteSale(id) {\n        await this.requestWithRetry({\n            method: \"DELETE\",\n            url: \"/sales/\".concat(id)\n        });\n    }\n    // ==================== MÉTODOS UTILITÁRIOS ====================\n    /**\n   * Atualiza a configuração do cliente\n   */ updateConfig(config) {\n        if (config.baseURL) {\n            this.baseURL = config.baseURL;\n            this.client.defaults.baseURL = config.baseURL;\n        }\n        if (config.apiKey) {\n            this.apiKey = config.apiKey;\n            this.client.defaults.headers.common[\"Authorization\"] = \"Bearer \".concat(config.apiKey);\n        }\n        if (config.timeout) {\n            this.timeout = config.timeout;\n            this.client.defaults.timeout = config.timeout;\n        }\n        if (config.retryAttempts) {\n            this.retryAttempts = config.retryAttempts;\n        }\n    }\n    /**\n   * Obtém estatísticas da API\n   */ async getApiStats() {\n        // Esta seria uma implementação personalizada baseada nos logs\n        // Por enquanto, retorna dados mock\n        return {\n            totalRequests: 0,\n            averageResponseTime: 0,\n            errorRate: 0\n        };\n    }\n    constructor(config = {}){\n        this.baseURL = config.baseURL || \"https://www.auxiliadorapay.shop/api\" || 0;\n        this.apiKey = config.apiKey || process.env.AUXILIADORA_API_KEY;\n        this.timeout = config.timeout || parseInt(process.env.AUXILIADORA_API_TIMEOUT || \"30000\");\n        this.retryAttempts = config.retryAttempts || 3;\n        this.client = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n            baseURL: this.baseURL,\n            timeout: this.timeout,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...this.apiKey && {\n                    \"Authorization\": \"Bearer \".concat(this.apiKey)\n                }\n            }\n        });\n        this.setupInterceptors();\n    }\n}\n// Instância singleton do cliente\nconst auxiliadoraApiClient = new AuxiliadoraPayApiClient();\n// Exportação para compatibilidade\nconst apiClient = auxiliadoraApiClient;\n// Função helper para criar uma nova instância com configuração específica\nconst createApiClient = (config)=>new AuxiliadoraPayApiClient(config);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api-client.ts\n"));

/***/ })

});